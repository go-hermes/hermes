name: CI
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches:
      - "*"
  merge_group:
jobs:
  build:
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Get changed files since last commit
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          since_last_remote_commit: "false"
      - name: Check changed files
        id: check-files
        run: echo "has_changes=$(echo ${{ contains(steps.changed-files.outputs.all_modified_files, '.go') || contains(steps.changed-files.outputs.all_modified_files, 'go.mod') || contains(steps.changed-files.outputs.all_modified_files, 'go.sum') || contains(steps.changed-files.outputs.all_modified_files, 'Makefile') }})" >> $GITHUB_OUTPUT
      - name: Use Go From go.mod
        if: steps.check-files.outputs.has_changes == 'true'
        uses: actions/setup-go@v5
        with:
          go-version-file: "./go.mod"
      - name: Run Static Check (lint) on Go files
        if: steps.check-files.outputs.has_changes == 'true'
        run: |
          echo "installing staticcheck..."
          go install honnef.co/go/tools/cmd/staticcheck@latest
          echo "running staticcheck..."
          staticcheck ./...
      - name: Check for formatting changes
        if: steps.check-files.outputs.has_changes == 'true'
        run: gofmt -s -w . && git diff --exit-code
      - name: Check for Go Vet Static Errors
        if: steps.check-files.outputs.has_changes == 'true'
        run: go vet ./...
      - name: Check if Go mod and sum are aligned
        if: steps.check-files.outputs.has_changes == 'true'
        run: go mod tidy && git diff --exit-code
      - name: Run Unit Tests
        if: steps.check-files.outputs.has_changes == 'true'
        run: make test
